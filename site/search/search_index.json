{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Manual de C\u00f3digos Modulo Rriet","text":"<p>Bienvenido al Manual de C\u00f3digos del modulo Rriet. Selecciona un componente para ver su c\u00f3digo listo para copiar y pegar.  </p>"},{"location":"#sensores","title":"Sensores","text":"<ul> <li>Sensor Ultrasonico HC-SR04 </li> <li>Sensor IR </li> <li>Sensor de Temperatura (DHT11)</li> <li>Sensor de Humedad en la Tierra</li> <li>Sensor de Lluvia</li> <li>Sensor de Movimiento PIR</li> <li>Sensor de Flama</li> <li>Sensor de Gas</li> </ul>"},{"location":"#actuadores","title":"Actuadores","text":"<ul> <li>Servo Motor</li> <li>Motor a pasos</li> <li>LED RGB </li> <li>Relevador (Relay) </li> <li>Laser (HW-493) </li> <li>Buzzer </li> </ul>"},{"location":"#displays","title":"Displays","text":"<p>LCD Matriz LED Display 7 segmentos (74HC595)</p>"},{"location":"#otros-modulos","title":"Otros m\u00f3dulos","text":"<p>M\u00f3dulo Bluetooth HC-05 Potenci\u00f3metro Joystick Anal\u00f3gico</p>"},{"location":"Actuadores/buzzer/","title":"Buzzer","text":""},{"location":"Actuadores/buzzer/#codigo","title":"Codigo:","text":"<pre><code>int buzzer = 8;\n\nvoid setup() {\n  pinMode(buzzer, OUTPUT);\n}\n\nvoid loop() {\n  tone(buzzer, 200);\n  delay(500);\n\n  tone(buzzer, 1200);\n  delay(500);\n\n  noTone(buzzer);\n  delay(500);\n}\n</code></pre>"},{"location":"Actuadores/laser/","title":"Laser (HW-493)","text":"<p>Ten cuidado con este actuador, usalo de formula segura, sobretodo NO LO APUNTES A LOS OJOS</p>"},{"location":"Actuadores/laser/#codigo","title":"Codigo:","text":"<pre><code>int laserPin = 8;\n\nvoid setup() {\n  pinMode(laserPin, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(laserPin, HIGH);\n  delay(1000);\n\n  digitalWrite(laserPin, LOW);\n  delay(1000);\n}\n</code></pre>"},{"location":"Actuadores/motorpasos/","title":"Motor a pasos","text":""},{"location":"Actuadores/motorpasos/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;Stepper.h&gt;\n#define PASOS_POR_VUELTA 2048\n\nStepper motor(PASOS_POR_VUELTA, 8, 10, 9, 11);\n\nvoid setup() {\n  motor.setSpeed(15);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  motor.step(PASOS_POR_VUELTA);\n  delay(1000);\n\n  motor.step(-PASOS_POR_VUELTA);\n  delay(1000);\n}\n</code></pre>"},{"location":"Actuadores/rele/","title":"Relevador (Relay)","text":""},{"location":"Actuadores/rele/#codigo","title":"Codigo:","text":"<pre><code>int rele = 7;\n\nvoid setup() {\n  pinMode(rele, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(rele, LOW);\n  delay(1000);\n\n  digitalWrite(rele, HIGH);\n  delay(1000);\n}\n</code></pre>"},{"location":"Actuadores/rgb/","title":"LED RGB","text":""},{"location":"Actuadores/rgb/#codigo","title":"Codigo:","text":"<pre><code>int rojo = 9;\nint verde = 10;\nint azul = 11;\n\nvoid setup() {\n  pinMode(rojo, OUTPUT);\n  pinMode(verde, OUTPUT);\n  pinMode(azul, OUTPUT);\n}\n\nvoid loop() {\n  analogWrite(rojo, 255);\n  analogWrite(verde, 0);\n  analogWrite(azul, 0);\n  delay(500);\n\n  analogWrite(rojo, 0);\n  analogWrite(verde, 255);\n  analogWrite(azul, 0);\n  delay(500);\n\n  analogWrite(rojo, 0);\n  analogWrite(verde, 0);\n  analogWrite(azul, 255);\n  delay(500);\n\n  analogWrite(rojo, 255);\n  analogWrite(verde, 255);\n  analogWrite(azul, 0);\n  delay(500);\n\n  analogWrite(rojo, 0);\n  analogWrite(verde, 255);\n  analogWrite(azul, 255);\n  delay(500);\n\n  analogWrite(rojo, 255);\n  analogWrite(verde, 0);\n  analogWrite(azul, 255);\n  delay(500);\n\n  analogWrite(rojo, 255);\n  analogWrite(verde, 255);\n  analogWrite(azul, 255);\n  delay(500);\n\n  analogWrite(rojo, 0);\n  analogWrite(verde, 0);\n  analogWrite(azul, 0);\n  delay(500);\n}\n</code></pre>"},{"location":"Actuadores/servo/","title":"Servo Motor","text":""},{"location":"Actuadores/servo/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;Servo.h&gt;\n\nServo miServo;  \nint pos = 0;   \n\nvoid setup() {\n  miServo.attach(9); \n}\n\nvoid loop() {\n  for (pos = 0; pos &lt;= 180; pos += 1) {\n    miServo.write(pos);\n    delay(15); \n  }\n\n  for (pos = 180; pos &gt;= 0; pos -= 1) {\n    miServo.write(pos);\n    delay(15);\n  }\n}\n</code></pre>"},{"location":"Otros/bluetooth/","title":"M\u00f3dulo Bluetooth HC-05","text":"<p>Para interactuar con Arduino desde el celular mediante Bluetooth, recomendamos usar la app \u201cSerial Bluetooth Terminal\u201d:</p> <p>Serial Bluetooth Terminal en Google Play</p> <p>Con esta app puedes:</p> <ul> <li>Enviar caracteres desde tu celular asi aparecer\u00e1n en el monitor Serial de Arduino</li> <li>Escribir en el monitor Serial y se enviar\u00e1 al celular</li> </ul>"},{"location":"Otros/bluetooth/#pasos-para-conectarte","title":"Pasos para conectarte","text":"<ol> <li>Enciende tu m\u00f3dulo HC-05/06 y empareja tu celular con \u00e9l (desde ajustes de Bluetooth).  </li> <li>Abre la app Serial Bluetooth Terminal en tu celular.  </li> <li>Selecciona el dispositivo HC-05/06 en la app para conectarte.  </li> <li>Env\u00eda caracteres desde la app \u2192 se mostrar\u00e1n en el monitor Serial de Arduino.  </li> <li>Escribe algo en el monitor Serial de Arduino \u2192 se enviar\u00e1 al celular.</li> </ol>"},{"location":"Otros/bluetooth/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;SoftwareSerial.h&gt;\n\nSoftwareSerial BT(10, 11); \n\nvoid setup() {\n  Serial.begin(9600);\n  BT.begin(9600); \n  Serial.println(\" Bluetooth listo. Con\u00e9ctate desde tu celular.\");\n}\n\nvoid loop() {\n  if (BT.available()) {\n    char c = BT.read();\n    Serial.print(\"BT \u2192 \");\n    Serial.println(c);\n  }\n\n  if (Serial.available()) {\n    char c = Serial.read();\n    BT.write(c);\n  }\n}\n</code></pre>"},{"location":"Otros/joystick/","title":"Joystick","text":""},{"location":"Otros/joystick/#codigo","title":"Codigo:","text":"<pre><code>int ejeX = A0;\nint ejeY = A1;\nint boton = 7;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(boton, INPUT_PULLUP); \n}\n\nvoid loop() {\n  int x = analogRead(ejeX);\n  int y = analogRead(ejeY);\n  int sw = digitalRead(boton);\n\n  Serial.print(\"X: \");\n  Serial.print(x);\n  Serial.print(\" | Y: \");\n  Serial.print(y);\n  Serial.print(\" | Boton: \");\n  if (sw == LOW) Serial.println(\"Presionado\");\n  else Serial.println(\"Suelto\");\n\n  delay(300);\n}\n</code></pre>"},{"location":"Otros/pote/","title":"Potenciometro","text":""},{"location":"Otros/pote/#codigo","title":"Codigo:","text":"<pre><code>#define POT A0\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  int valor = analogRead(POT);\n  int porcentaje = map(valor, 0, 1023, 0, 100);\n\n  Serial.print(\"Nivel del potenci\u00f3metro: \");\n  Serial.print(porcentaje);\n  Serial.println(\"%\");\n\n  delay(200);\n}\n</code></pre>"},{"location":"Pantalla/lcd/","title":"LCD","text":"<p>Para usar este LCD necesitas la librer\u00eda LiquidCrystal_I2C.  </p>"},{"location":"Pantalla/lcd/#instalacion-de-la-libreria","title":"Instalaci\u00f3n de la librer\u00eda","text":"<ol> <li>Abre Arduino IDE.</li> <li>Ve a Sketch \u2192 Include Library \u2192 Manage Libraries\u2026</li> <li>En la barra de b\u00fasqueda escribe: <code>LiquidCrystal I2C</code></li> <li>Selecciona la librer\u00eda de Frank de Brabander y haz clic en Install</li> <li>Espera que termine la instalaci\u00f3n</li> </ol>"},{"location":"Pantalla/lcd/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;Wire.h&gt;\n#include &lt;LiquidCrystal_I2C.h&gt;\n\nLiquidCrystal_I2C lcd(0x27, 16, 2);\n\nvoid setup() {\n  lcd.init();        \n  lcd.backlight();\n}\n\nvoid loop() {\n  lcd.clear();\n  lcd.setCursor(0, 0);\n  lcd.print(\"Hola Mundo\");\n  delay(2000);\n\n  lcd.clear();\n  delay(500);\n\n  lcd.setCursor(0, 0);\n  lcd.print(\"Adios Mundo\");\n  delay(3000);\n\n  lcd.clear();\n  delay(1000);\n}\n</code></pre>"},{"location":"Pantalla/matriz/","title":"Matriz LED","text":"<p>Para controlar esta matriz necesitas la librer\u00eda LedControl.  </p>"},{"location":"Pantalla/matriz/#instalacion-de-la-libreria","title":"Instalaci\u00f3n de la librer\u00eda","text":"<ol> <li>Abre Arduino IDE.</li> <li>Ve a Sketch \u2192 Include Library \u2192 Manage Libraries\u2026</li> <li>En la barra de b\u00fasqueda escribe: <code>LedControl</code></li> <li>Selecciona la librer\u00eda de E. Reh y haz clic en Install</li> <li>Espera a que termine la instalaci\u00f3n</li> </ol>"},{"location":"Pantalla/matriz/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;LedControl.h&gt;\n\nLedControl lc = LedControl(11, 13, 10, 1);\n\nbyte smiley[8] = {\n  B00111100,\n  B01000010,\n  B10100101,\n  B10000001,\n  B10100101,\n  B10011001,\n  B01000010,\n  B00111100\n};\n\nvoid setup() {\n  lc.shutdown(0, false);\n  lc.setIntensity(0, 8);\n  lc.clearDisplay(0);\n\n  for(int i=0; i&lt;8; i++){\n    lc.setRow(0, i, smiley[i]);\n  }\n}\n\nvoid loop() {\n}\n</code></pre>"},{"location":"Pantalla/segmentos/","title":"Pantalla de 7 segmentos con 74HC595","text":"<p>Este ejemplo usa la librer\u00eda ShiftRegister74HC595 para manejar 2 displays de 7 segmentos con Arduino, usando menos pines que si los conectaras directo.</p>"},{"location":"Pantalla/segmentos/#instalacion-de-la-libreria","title":"Instalaci\u00f3n de la librer\u00eda","text":"<ol> <li>Abre Arduino IDE.</li> <li>Ve a Sketch \u2192 Include Library \u2192 Manage Libraries\u2026</li> <li>En la barra de b\u00fasqueda escribe: <code>ShiftRegister74HC595</code></li> <li>Busca la librer\u00eda de Lukas F. Hartmann (u otra compatible) y haz clic en Install</li> <li>Espera a que termine la instalaci\u00f3n</li> </ol>"},{"location":"Pantalla/segmentos/#codigo","title":"Codigo:","text":"<pre><code>#include &lt;ShiftRegister74HC595.h&gt;\n\nint dataPIN = 0;\nint latchPIN = 2;\nint clockPIN = 1;\n\nShiftRegister74HC595&lt;2&gt; sr(dataPIN, clockPIN, latchPIN);\n\nint digit1, digit2;\nuint8_t digits[] = { \n  B11000000,\n  B11111001,\n  B10100100,\n  B10110000,\n  B10011001,\n  B10010010,\n  B10000010,\n  B11111000,\n  B10000000,\n  B10010000\n};\n\nvoid setup() {\n}\n\nvoid loop() {\n  showNumber(69);\n  delay(2000);\n  for(int i=0; i&lt;=99; i++) {\n    showNumber(i);\n    delay(350);\n  }\n  delay(2000);\n  for(int i=99; i&gt;=0; i--) {\n    showNumber(i);\n    delay(350);\n  }\n  delay(2000);   \n}\n\nvoid showNumber(int num) {\n  digit1 = num % 10;\n  digit2 = (num / 10) % 10;\n  uint8_t numberToPrint[] = {digits[digit2], digits[digit1]};\n  sr.setAll(numberToPrint);\n}\n</code></pre>"},{"location":"Sensores/flama/","title":"Sensor de Flama","text":""},{"location":"Sensores/flama/#codigo","title":"Codigo:","text":"<pre><code>int sensorFlama = 7;\nint estado;\n\nvoid setup() {\n  pinMode(sensorFlama, INPUT);\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  estado = digitalRead(sensorFlama);\n\n  if (estado == LOW) { \n    Serial.println(\"No hay llama\");\n  } else {\n    Serial.println(\"\u00a1Llama detectada!\");\n  }\n\n  delay(500); \n}\n</code></pre>"},{"location":"Sensores/gas/","title":"Sensor de Gas Metano MQ4","text":""},{"location":"Sensores/gas/#codigo","title":"Codigo:","text":"<pre><code>int pinAnalog = A0;\nint pinDigital = 7;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(pinDigital, INPUT);\n}\n\nvoid loop() {\n  int lecturaAnalog = analogRead(pinAnalog);\n  int lecturaDigital = digitalRead(pinDigital);\n\n  Serial.print(\"Lectura analogica: \");\n  Serial.print(lecturaAnalog);\n  Serial.print(\" | Lectura digital: \");\n  Serial.print(lecturaDigital);\n\n  if (lecturaDigital == Low) {\n    Serial.print(\" Alta concentracion de gas detectada!\");\n  }\n\n  Serial.println();\n  delay(1000);\n}\n</code></pre>"},{"location":"Sensores/humedad/","title":"Sensor de Humedad en la Tierra","text":""},{"location":"Sensores/humedad/#codigo","title":"Codigo:","text":"<pre><code>#define SENSOR A0\nint valor = 0;\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop() {\n  valor = analogRead(SENSOR);\n\n  int humedad = map(valor, 1023, 0, 0, 100);\n\n  Serial.print(\"Humedad: \");\n  Serial.print(humedad);\n  Serial.println(\"%\");\n\n  delay(500);\n}\n</code></pre>"},{"location":"Sensores/humedadtierra/","title":"Sensor de Humedad en la Tierra","text":""},{"location":"Sensores/humedadtierra/#codigo","title":"Codigo:","text":"<pre><code>#define sensor A0 \nint valor = 0;\n\nvoid setup()\n{\n    Serial.begin(9600);\n}\nvoid loop()\n{\n    int valor = map(analogRead(sensor), 0, 1023, 100, 0);\n    Serial.print(\"Humedad: \");\n    Serial.print(valor);\n    Serial.println(\"%\");\n    delay(100);\n}\n</code></pre>"},{"location":"Sensores/infrarrojo/","title":"Sensor IR","text":""},{"location":"Sensores/infrarrojo/#codigo","title":"Codigo:","text":"<pre><code>int sensorIR = 7;\nint estado;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(sensorIR, INPUT);\n}\n\nvoid loop() {\n  estado = digitalRead(sensorIR);\n\n  if (estado == LOW) { \n    Serial.println(\"Objeto detectado\");\n  } else {\n    Serial.println(\"No hay objeto\");\n  }\n\n  delay(300);\n}\n</code></pre>"},{"location":"Sensores/movimiento/","title":"Sensor de Movimiento PIR","text":""},{"location":"Sensores/movimiento/#codigo","title":"Codigo:","text":"<pre><code>int pinPIR = 7;\nint estado = 0;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(pinPIR, INPUT);\n}\n\nvoid loop() {\n  estado = digitalRead(pinPIR);\n\n  if (estado == HIGH) {\n    Serial.println(\"Movimiento detectado\");\n  } else {\n    Serial.println(\"Sin movimiento...\");\n  }\n\n  delay(500);\n}\n</code></pre>"},{"location":"Sensores/temperatura/","title":"Sensor de Temperatura (DHT11)","text":"<p>Para usar este c\u00f3digo, necesitas la librer\u00eda DHT sensor library de Adafruit.</p>"},{"location":"Sensores/temperatura/#instalacion-de-la-libreria","title":"Instalaci\u00f3n de la librer\u00eda","text":"<ol> <li>Abre Arduino IDE.</li> <li>Ve a Sketch \u2192 Include Library \u2192 Manage Libraries\u2026</li> <li>En la barra de b\u00fasqueda escribe: <code>DHT sensor library</code></li> <li>Busca la librer\u00eda de Adafruit y haz clic en Install</li> <li>Espera a que termine la instalaci\u00f3n y reinicia Arduino IDE si es necesario</li> </ol>"},{"location":"Sensores/temperatura/#codigo","title":"Codigo:","text":"<pre><code>#include \"DHT.h\"\n\n#define DHTPIN 2     \n#define DHTTYPE DHT11\n\nDHT dht(DHTPIN, DHTTYPE);\n\nvoid setup() {\n  Serial.begin(9600);\n  dht.begin();\n}\n\nvoid loop() {\n  float temperatura = dht.readTemperature(); \n  float humedad = dht.readHumidity();        \n\n  if (isnan(temperatura) || isnan(humedad)) {\n    Serial.println(\"Error al leer del DHT11\");\n  } else {\n    Serial.print(\"Temperatura: \");\n    Serial.print(temperatura);\n    Serial.print(\" \u00b0C, Humedad: \");\n    Serial.print(humedad);\n    Serial.println(\" %\");\n  }\n\n  delay(2000); \n}\n</code></pre>"},{"location":"Sensores/ultrasonico/","title":"Sensor Ultrasonico HC-SR04","text":""},{"location":"Sensores/ultrasonico/#codigo","title":"Codigo:","text":"<pre><code>#define TRIG 9\n#define ECHO 10\n\nlong duracion;\nint distancia;\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(TRIG, OUTPUT);\n  pinMode(ECHO, INPUT);\n}\n\nvoid loop() {\n  digitalWrite(TRIG, LOW);\n  delayMicroseconds(2);\n  digitalWrite(TRIG, HIGH);\n  delayMicroseconds(10);\n  digitalWrite(TRIG, LOW);\n\n  duracion = pulseIn(ECHO, HIGH);\n\n  distancia = duracion * 0.034 / 2;\n\n  Serial.print(\"Distancia: \");\n  Serial.print(distancia);\n  Serial.println(\" cm\");\n\n  delay(500);\n}\n</code></pre>"}]}